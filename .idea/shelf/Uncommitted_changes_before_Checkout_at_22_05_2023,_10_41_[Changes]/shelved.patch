Index: src/main/java/ua/goit/telegrambot/MyTelBot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ua.goit.telegrambot;\n\nimport org.telegram.telegrambots.bots.TelegramLongPollingBot;\nimport org.telegram.telegrambots.meta.api.methods.send.SendMessage;\nimport org.telegram.telegrambots.meta.api.objects.Update;\nimport org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;\nimport org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;\nimport org.telegram.telegrambots.meta.exceptions.TelegramApiException;\nimport ua.goit.banks.Banks;\nimport ua.goit.banks.Currencies;\nimport ua.goit.banks.WorkingCurrency;\nimport ua.goit.banks.BankFactory;\nimport ua.goit.userssetting.ChatBotSettings;\n\nimport java.io.IOException;\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class MyTelBot extends TelegramLongPollingBot {\n\n    private final ChatBotSettings options;\n\n    public MyTelBot() {\n        options = new ChatBotSettings();\n    }\n\n    @Override\n    public void onUpdateReceived(Update update) {\n        if (update.hasMessage()) {\n            if (update.getMessage().hasText() && update.getMessage().getText().equals(\"/start\")) {\n                sendNextMessage(sendHelloMessage(update.getMessage().getChatId()));\n            }\n        } else if (update.hasCallbackQuery()) {\n            System.out.print(\"id user= \" + update.getCallbackQuery().getMessage().getChatId() + \"  \");\n            String inputQueryMessage = String.valueOf(update.getCallbackQuery().getData());\n            SendMessage sendMessage = new SendMessage();\n\n            sendMessage.setChatId(String.valueOf(update.getCallbackQuery().getMessage().getChatId()));\n\n            switch (inputQueryMessage) {\n                case (\"current\") -> {\n                    sendMessage.setText(getCurrentData());\n                    sendNextMessage(sendMessage);\n                }\n                case (\"options\") -> sendNextMessage(sendChoiceOptionsMessage(sendMessage));\n                case(\"bank\") -> sendNextMessage(sendChoiceBankMessage(sendMessage));\n                case(\"decimals\") -> sendNextMessage(sendChoiceDecimalsMessage(sendMessage));\n                case(\"currencies\") -> sendNextMessage(sendChoiceCurrenciesMessage(sendMessage));\n                case(\"notifications\") -> sendNextMessage(sendChoiceAlertsMessage(sendMessage));\n                case(\"USD\") -> {\n                    sendNextMessage(sendUpdatedSettingMessage(sendMessage, inputQueryMessage));\n                    options.setChoicesCurrencies(List.of(Currencies.USD));\n                }\n                case(\"EUR\") -> {\n                    sendNextMessage(sendUpdatedSettingMessage(sendMessage, inputQueryMessage));\n                    options.setChoicesCurrencies(List.of(Currencies.EUR));\n                }\n                case(\"2\"), (\"3\"), (\"4\") -> {\n                    sendNextMessage(sendUpdatedSettingMessage(sendMessage, inputQueryMessage));\n                    options.setNumberOfDecimal(Integer.parseInt(inputQueryMessage));\n                }\n                case (\"NBUBank\"), (\"PrivatBank\"), (\"MonoBank\") -> {\n                    Banks newBank = BankFactory.getBank(inputQueryMessage);\n                    sendNextMessage(sendUpdatedSettingMessage(sendMessage,inputQueryMessage));\n                    options.setBank(newBank);\n                }\n                case (\"9:00\"), (\"10:00\"), (\"11:00\"), (\"12:00\"), (\"13:00\"), (\"14:00\"), (\"15:00\"), (\"16:00\"), (\"17:00\"), (\"18:00\"), (\"off\") -> {\n                    sendNextMessage(sendUpdatedSettingMessage(sendMessage, inputQueryMessage));\n                    options.setAlertTime(inputQueryMessage);\n                }\n                default -> {\n                    sendMessage.setText(\"Тут може бути ваша реклама): \" + update.getCallbackQuery().getData());\n                    sendNextMessage(sendMessage);\n                }\n            }\n        }\n    }\n\n    private void sendNextMessage(SendMessage message) {\n        try {\n            execute(message);\n        } catch (TelegramApiException e) {\n            e.printStackTrace();\n        }\n    }\n\n    private SendMessage sendHelloMessage(long chatId) {\n        SendMessage sendMessage = new SendMessage();\n        InlineKeyboardMarkup inlineKeyboardMarkup = getDefaultKeyBoard();\n\n        sendMessage.setChatId(String.valueOf(chatId));\n        sendMessage.setText(\"Ласкаво просимо. Цей бот допоможе відслідковувати актуальні курси валют\");\n        sendMessage.setReplyMarkup(inlineKeyboardMarkup);\n        return sendMessage;\n    }\n\n    private SendMessage sendChoiceOptionsMessage(SendMessage sendMessage) {\n        InlineKeyboardMarkup inlineKeyboardMarkup = getChoiceOptionsKeyBoard();\n\n        sendMessage.setText(\"Налаштування\");\n        sendMessage.setReplyMarkup(inlineKeyboardMarkup);\n        return sendMessage;\n    }\n\n    private SendMessage sendChoiceDecimalsMessage(SendMessage sendMessage) {\n        InlineKeyboardMarkup inlineKeyboardMarkup = getChoiceDecimalsKeyBoard();\n\n        sendMessage.setText(\"Виберіть кількість знаків після коми:\");\n        sendMessage.setReplyMarkup(inlineKeyboardMarkup);\n        return sendMessage;\n    }\n\n    private SendMessage sendChoiceCurrenciesMessage(SendMessage sendMessage) {\n        InlineKeyboardMarkup inlineKeyboardMarkup = getChoiceCurrenciesKeyBoard();\n\n        sendMessage.setText(\"Виберіть валюту:\");\n        sendMessage.setReplyMarkup(inlineKeyboardMarkup);\n        return sendMessage;\n    }\n\n    private SendMessage sendChoiceBankMessage(SendMessage sendMessage) {\n        InlineKeyboardMarkup inlineKeyboardMarkup = getChoiceBankKeyBoard();\n\n        sendMessage.setText(\"Виберіть банк:\");\n        sendMessage.setReplyMarkup(inlineKeyboardMarkup);\n        return sendMessage;\n    }\n\n    private SendMessage sendChoiceAlertsMessage(SendMessage sendMessage) {\n        InlineKeyboardMarkup inlineKeyboardMarkup = getChoiceAlertKeyboardButtons();\n\n        sendMessage.setText(\"Виберіть час сповіщень:\");\n        sendMessage.setReplyMarkup(inlineKeyboardMarkup);\n        return sendMessage;\n    }\n\n    private SendMessage sendUpdatedSettingMessage(SendMessage sendMessage, String inputQueryMessage) {\n        InlineKeyboardMarkup inlineKeyboardMarkup = getDefaultKeyBoard();\n        String bank = options.getBank().getName();\n        String numberOfDecimal = String.valueOf(options.getNumberOfDecimal());\n        String currencies = options.getChoicesCurrencies().toString().replaceAll(\"\\\\W\",\"\");\n        String alertTime = options.getAlertTime();\n        if (bank.equals(inputQueryMessage) || numberOfDecimal.equals(inputQueryMessage) || currencies.equals(inputQueryMessage) || alertTime.equals(inputQueryMessage)) {\n            sendMessage.setText(\"Ці налаштування вже встановлені.\");\n            sendMessage.setReplyMarkup(inlineKeyboardMarkup);\n            return sendMessage;\n        }\n        sendMessage.setText(\"Налаштування оновлені.\");\n        sendMessage.setReplyMarkup(inlineKeyboardMarkup);\n        return sendMessage;\n    }\n\n    private InlineKeyboardMarkup getDefaultKeyBoard() {\n        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();\n\n        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton(\"Отримати інфо\");\n        inlineKeyboardButton1.setCallbackData(\"current\");\n        List<InlineKeyboardButton> keyboardButtonsRow1 = new ArrayList<>();\n        keyboardButtonsRow1.add(inlineKeyboardButton1);\n\n        InlineKeyboardButton inlineKeyboardButton2 = new InlineKeyboardButton(\"Налаштування\");\n        inlineKeyboardButton2.setCallbackData(\"options\");\n        List<InlineKeyboardButton> keyboardButtonsRow2 = new ArrayList<>();\n        keyboardButtonsRow2.add(inlineKeyboardButton2);\n\n        List<List<InlineKeyboardButton>> rowList = new ArrayList<>();\n        rowList.add(keyboardButtonsRow1);\n        rowList.add(keyboardButtonsRow2);\n\n        inlineKeyboardMarkup.setKeyboard(rowList);\n        return inlineKeyboardMarkup;\n    }\n\n    private InlineKeyboardMarkup getChoiceBankKeyBoard() {\n        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();\n\n        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton(\"NBUBank\");\n        inlineKeyboardButton1.setCallbackData(\"NBUBank\");\n        List<InlineKeyboardButton> keyboardButtonsRow1 = new ArrayList<>();\n        keyboardButtonsRow1.add(inlineKeyboardButton1);\n\n        InlineKeyboardButton inlineKeyboardButton2 = new InlineKeyboardButton(\"Приват Банк\");\n        inlineKeyboardButton2.setCallbackData(\"PrivatBank\");\n        List<InlineKeyboardButton> keyboardButtonsRow2 = new ArrayList<>();\n        keyboardButtonsRow2.add(inlineKeyboardButton2);\n\n        InlineKeyboardButton inlineKeyboardButton3 = new InlineKeyboardButton(\"МоноБанк\");\n        inlineKeyboardButton3.setCallbackData(\"MonoBank\");\n        List<InlineKeyboardButton> keyboardButtonsRow3 = new ArrayList<>();\n        keyboardButtonsRow3.add(inlineKeyboardButton3);\n\n        List<List<InlineKeyboardButton>> rowList = new ArrayList<>();\n        rowList.add(keyboardButtonsRow1);\n        rowList.add(keyboardButtonsRow2);\n        rowList.add(keyboardButtonsRow3);\n\n        inlineKeyboardMarkup.setKeyboard(rowList);\n        return inlineKeyboardMarkup;\n    }\n\n    private InlineKeyboardMarkup getChoiceDecimalsKeyBoard(){\n        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();\n\n        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton(\"2\");\n        inlineKeyboardButton1.setCallbackData(\"2\");\n        List<InlineKeyboardButton> keyboardButtonsRow1 = new ArrayList<>();\n        keyboardButtonsRow1.add(inlineKeyboardButton1);\n\n        InlineKeyboardButton inlineKeyboardButton2 = new InlineKeyboardButton(\"3\");\n        inlineKeyboardButton2.setCallbackData(\"3\");\n        List<InlineKeyboardButton> keyboardButtonsRow2 = new ArrayList<>();\n        keyboardButtonsRow2.add(inlineKeyboardButton2);\n\n        InlineKeyboardButton inlineKeyboardButton3 = new InlineKeyboardButton(\"4\");\n        inlineKeyboardButton3.setCallbackData(\"4\");\n        List<InlineKeyboardButton> keyboardButtonsRow3 = new ArrayList<>();\n        keyboardButtonsRow3.add(inlineKeyboardButton3);\n\n        List<List<InlineKeyboardButton>> rowList = new ArrayList<>();\n        rowList.add(keyboardButtonsRow1);\n        rowList.add(keyboardButtonsRow2);\n        rowList.add(keyboardButtonsRow3);\n\n        inlineKeyboardMarkup.setKeyboard(rowList);\n        return inlineKeyboardMarkup;\n    }\n\n    private InlineKeyboardMarkup getChoiceOptionsKeyBoard(){\n        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();\n\n        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton(\"Знаки після коми\");\n        inlineKeyboardButton1.setCallbackData(\"decimals\");\n        List<InlineKeyboardButton> keyboardButtonsRow1 = new ArrayList<>();\n        keyboardButtonsRow1.add(inlineKeyboardButton1);\n\n        InlineKeyboardButton inlineKeyboardButton2 = new InlineKeyboardButton(\"Банк\");\n        inlineKeyboardButton2.setCallbackData(\"bank\");\n        List<InlineKeyboardButton> keyboardButtonsRow2 = new ArrayList<>();\n        keyboardButtonsRow2.add(inlineKeyboardButton2);\n\n        InlineKeyboardButton inlineKeyboardButton3 = new InlineKeyboardButton(\"Валюти\");\n        inlineKeyboardButton3.setCallbackData(\"currencies\");\n        List<InlineKeyboardButton> keyboardButtonsRow3 = new ArrayList<>();\n        keyboardButtonsRow3.add(inlineKeyboardButton3);\n\n        InlineKeyboardButton inlineKeyboardButton4 = new InlineKeyboardButton(\"Час сповіщень\");\n        inlineKeyboardButton4.setCallbackData(\"notifications\");\n        List<InlineKeyboardButton> keyboardButtonsRow4 = new ArrayList<>();\n        keyboardButtonsRow4.add(inlineKeyboardButton4);\n\n        List<List<InlineKeyboardButton>> rowList = new ArrayList<>();\n        rowList.add(keyboardButtonsRow1);\n        rowList.add(keyboardButtonsRow2);\n        rowList.add(keyboardButtonsRow3);\n        rowList.add(keyboardButtonsRow4);\n\n        inlineKeyboardMarkup.setKeyboard(rowList);\n        return inlineKeyboardMarkup;\n    }\n\n    private InlineKeyboardMarkup getChoiceCurrenciesKeyBoard(){\n        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();\n\n        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton(\"Євро\");\n        inlineKeyboardButton1.setCallbackData(\"EUR\");\n        List<InlineKeyboardButton> keyboardButtonsRow1 = new ArrayList<>();\n        keyboardButtonsRow1.add(inlineKeyboardButton1);\n\n        InlineKeyboardButton inlineKeyboardButton2 = new InlineKeyboardButton(\"Американський долар\");\n        inlineKeyboardButton2.setCallbackData(\"USD\");\n        List<InlineKeyboardButton> keyboardButtonsRow2 = new ArrayList<>();\n        keyboardButtonsRow2.add(inlineKeyboardButton2);\n\n        List<List<InlineKeyboardButton>> rowList = new ArrayList<>();\n        rowList.add(keyboardButtonsRow1);\n        rowList.add(keyboardButtonsRow2);\n\n        inlineKeyboardMarkup.setKeyboard(rowList);\n        return inlineKeyboardMarkup;\n    }\n\n    public InlineKeyboardMarkup getChoiceAlertKeyboardButtons() {\n        InlineKeyboardMarkup inlineKeyboardMarkup = new InlineKeyboardMarkup();\n\n        InlineKeyboardButton inlineKeyboardButton1 = new InlineKeyboardButton(\"9:00\");\n        inlineKeyboardButton1.setCallbackData(\"9:00\");\n        InlineKeyboardButton inlineKeyboardButton2 = new InlineKeyboardButton(\"10:00\");\n        inlineKeyboardButton2.setCallbackData(\"10:00\");\n        InlineKeyboardButton inlineKeyboardButton3 = new InlineKeyboardButton(\"11:00\");\n        inlineKeyboardButton3.setCallbackData(\"11:00\");\n        List<InlineKeyboardButton> keyboardButtonsRow1 = new ArrayList<>();\n        keyboardButtonsRow1.add(inlineKeyboardButton1);\n        keyboardButtonsRow1.add(inlineKeyboardButton2);\n        keyboardButtonsRow1.add(inlineKeyboardButton3);\n\n        InlineKeyboardButton inlineKeyboardButton4 = new InlineKeyboardButton(\"12:00\");\n        inlineKeyboardButton4.setCallbackData(\"12:00\");\n        InlineKeyboardButton inlineKeyboardButton5 = new InlineKeyboardButton(\"13:00\");\n        inlineKeyboardButton5.setCallbackData(\"13:00\");\n        InlineKeyboardButton inlineKeyboardButton6 = new InlineKeyboardButton(\"14:00\");\n        inlineKeyboardButton6.setCallbackData(\"14:00\");\n        List<InlineKeyboardButton> keyboardButtonsRow2 = new ArrayList<>();\n        keyboardButtonsRow2.add(inlineKeyboardButton4);\n        keyboardButtonsRow2.add(inlineKeyboardButton5);\n        keyboardButtonsRow2.add(inlineKeyboardButton6);\n\n        InlineKeyboardButton inlineKeyboardButton7 = new InlineKeyboardButton(\"15:00\");\n        inlineKeyboardButton7.setCallbackData(\"15:00\");\n        InlineKeyboardButton inlineKeyboardButton8 = new InlineKeyboardButton(\"16:00\");\n        inlineKeyboardButton8.setCallbackData(\"16:00\");\n        InlineKeyboardButton inlineKeyboardButton9 = new InlineKeyboardButton(\"17:00\");\n        inlineKeyboardButton9.setCallbackData(\"17:00\");\n        List<InlineKeyboardButton> keyboardButtonsRow3 = new ArrayList<>();\n        keyboardButtonsRow3.add(inlineKeyboardButton7);\n        keyboardButtonsRow3.add(inlineKeyboardButton8);\n        keyboardButtonsRow3.add(inlineKeyboardButton9);\n\n        InlineKeyboardButton inlineKeyboardButton10 = new InlineKeyboardButton(\"18:00\");\n        inlineKeyboardButton10.setCallbackData(\"18:00\");\n        InlineKeyboardButton inlineKeyboardButton11 = new InlineKeyboardButton(\"Вимкнути сповіщення\");\n        inlineKeyboardButton11.setCallbackData(\"off\");\n        List<InlineKeyboardButton> keyboardButtonsRow4 = new ArrayList<>();\n        keyboardButtonsRow4.add(inlineKeyboardButton10);\n        keyboardButtonsRow4.add(inlineKeyboardButton11);\n\n        List<List<InlineKeyboardButton>> rowList = new ArrayList<>();\n        rowList.add(keyboardButtonsRow1);\n        rowList.add(keyboardButtonsRow2);\n        rowList.add(keyboardButtonsRow3);\n        rowList.add(keyboardButtonsRow4);\n\n        inlineKeyboardMarkup.setKeyboard(rowList);\n        return inlineKeyboardMarkup;\n\n    }\n\n    private String getCurrentData() {\n        StringBuilder result = new StringBuilder();\n        int numberOfDecimal = options.getNumberOfDecimal();\n\n        try {\n            options.getBank().updateCurrentData();\n        } catch (IOException e) {\n            System.out.println(\"No bank connection\");\n        }\n\n        result.append(\"Курс в \");\n        result.append(options.getBank().getName());\n        result.append(\": \\n\");\n\n        for (WorkingCurrency current : options.getBank().getCurrencies()) {\n            if (!options.getChoicesCurrencies().contains(current.getName())) {\n                continue;\n            }\n\n            result.append(\"\\n\");\n            result.append(current.getName());\n            result.append(\"/UAH\\n\");\n            result.append(\"   Продаж:\");\n            result.append(String.format(\"%.\" + numberOfDecimal + \"f\\n\", current.getCurrencySellingRate()));\n            result.append(\"   Купівля:\");\n            result.append(String.format(\"%.\" + numberOfDecimal + \"f\", current.getCurrencyBuyingRate()));\n        }\n\n        return result.toString();\n    }\n\n    @Override\n    public String getBotUsername() {\n        return \"BlackBot23_bot\";\n    }\n\n    // добавить имя и токен своего бота, они не подлежат заливке в GitHub\n    @Override\n    public String getBotToken() {\n        return \"\";\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ua/goit/telegrambot/MyTelBot.java b/src/main/java/ua/goit/telegrambot/MyTelBot.java
--- a/src/main/java/ua/goit/telegrambot/MyTelBot.java	(revision 853996c0bbadf81974435ce2da948374ee35cc0d)
+++ b/src/main/java/ua/goit/telegrambot/MyTelBot.java	(date 1684744339330)
@@ -375,4 +375,4 @@
     public String getBotToken() {
         return "";
     }
-}
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0d7db63f-899b-4d92-b2f5-a0325d5769fc\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/ua/goit/telegrambot/MyTelBot.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/ua/goit/telegrambot/MyTelBot.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"Enum\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Merge.Settings\">\n    <option name=\"BRANCH\" value=\"origin/master\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2PxNqPxJz99Z4J5S1TgLqGza08O\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration name=\"AppLauncher\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"ua.goit.AppLauncher\" />\n      <module name=\"CurrencyBot-GroupProject\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"ua.goit.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.AppLauncher\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"047d9f92-58b8-43c2-9c58-2c36a96558ef\" name=\"Changes\" comment=\"\" />\n      <created>1684394986460</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1684394986460</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Initial commit\">\n      <created>1684395758173</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1684395758173</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Add first change in start branch\">\n      <created>1684397225817</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1684397225817</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"3\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"SergeiB\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Initial commit\" />\n    <MESSAGE value=\"Add first change in start branch\" />\n    <MESSAGE value=\"Add part working features\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Add part working features\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 853996c0bbadf81974435ce2da948374ee35cc0d)
+++ b/.idea/workspace.xml	(date 1684744733543)
@@ -28,10 +28,18 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="SergeiB" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="GithubPullRequestsUISettings">
+    <option name="recentNewPullRequestHead">
+      <RepoCoordinatesHolder>
+        <option name="owner" value="Sergiy-Chernuha" />
+        <option name="repository" value="CurrencyBot-GroupProject" />
+      </RepoCoordinatesHolder>
+    </option>
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -106,7 +114,7 @@
                   <entry key="branch">
                     <value>
                       <list>
-                        <option value="SergeiB" />
+                        <option value="origin/SergeiB" />
                       </list>
                     </value>
                   </entry>
